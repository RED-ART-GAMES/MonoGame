//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Input
    {
        public enum CameraResult
        {
            Ok = 0,
            ErrorParam = -2144468992,
            ErrorAlreadyInit = -2144468991,
            ErrorNotInit = -2144468990,
            ErrorAlreadyOpen = -2144468989,
            ErrorNotOPen = -2144468988,
            ErrorAlreadyStart = -2144468987,
            ErrorNotStart = -2144468986,
            ErrorFormatUnknown = -2144468985,
            ErrorResolutionUnknown = -2144468984,
            ErrorBadFramerate = -2144468983,
            ErrorTimeout = -2144468982,
            ErrorAttributeUnknown = -2144468981,
            ErrorBusy = -2144468980,
            ErrorUnknownConfig = -2144468979,
            ErrorAlreadyRead = -2144468977,
            ErrorNotConnected = -2144468976,
            ErrorNotSupported = -2144468975,
            ErrorInvalidConfig = -2144468973,
            ErrorMaxHandle = -2144468972,
            ErrorMaxProcess = -2144468741,
            ErrorCopyOutFailed = -2144468740,
            ErrorCopyInFailed = -2144468739,
            ErrorKProcCreate = -2144468738,
            ErrorFatal = -2144468737
        }

        public enum CameraBaseFormat
        {
            Yuv422 = 0,
            Raw16 = 1,
            Raw8 = 2,
            NoUse = 16,
            Unknown = 255
        }

        public enum CameraChannel
        {
            Channel0 = 1,
            Channel1 = 2,
            ChannelBoth = 3
        }

        public enum CameraConfigType
        {
            Type1 = 1,
            Type2 = 2,
            Type3 = 3,
            Type4 = 4,
            Extension = 16
        }

        public enum CameraFrameRate
        {
            Unknown = 0,
            Fps_7_5 = 7,
            Fps_15 = 15,
            Fps_30 = 30,
            Fps_60 = 60,
            Fps_120 = 120,
            Fps_240 = 240
        }

        [Flags]
        public enum CameraFrameFormat
        {
            Level0 = 1,
            Level1 = 2,
            Level2 = 4,
            Level3 = 8,
            All = 15
        }

        public enum CameraResolution
        {
            Res_1280x800 = 0,
            Res_640x400 = 1,
            Res_320x200 = 2,
            Res_160x100 = 3,
            SpecifiedWidthHeight = 5,
            Unknown = 255
        }

        public enum CameraScaleFormat
        {
            Yuv422 = 0,
            Y16 = 3,
            Y8 = 4,
            NoUse = 16,
            Unknown = 255
        }

        public enum CameraFrameMemoryType
        {
            Onion = 0,
            Garlic = 1
        }

        [Flags]
        public enum CameraFrameWaitMode
        {
            NextFrameOn = 0,
            NextFrameOff = 16
        }

        public enum CameraStatus
        {
            IsActive = 1,
            IsNotActive = 0,
            IsAlreadyRead = 2,
            IsNotStable = 3,
            IsInvalidFrame = -1,
            IsInvalidMetaData = -2
        }

        public unsafe partial class Camera : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 4)]
            public partial struct Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6CameraC2Ev")]
                internal static extern void ctor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6CameraC2ERKS0_")]
                internal static extern void cctor_1(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6CameraD2Ev")]
                internal static extern void dtor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera10IsAttachedEv")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool IsAttached_0();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera4OpenEv")]
                internal static extern Input.CameraResult Open_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera4StopEv")]
                internal static extern Input.CameraResult Stop_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera5CloseEv")]
                internal static extern Input.CameraResult Close_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera13SetConfigTypeENS_16CameraConfigTypeE")]
                internal static extern Input.CameraResult SetConfigType_0(global::System.IntPtr instance, Input.CameraConfigType configType);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera5StartENS_17CameraFrameFormatES1_")]
                internal static extern Input.CameraResult Start_0(global::System.IntPtr instance, Input.CameraFrameFormat camera1format, Input.CameraFrameFormat camera2Format);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera15GetExposureGainENS_13CameraChannelEPjS2_S2_S2_")]
                internal static extern Input.CameraResult GetExposureGain_0(global::System.IntPtr instance, Input.CameraChannel channel, uint* exposureControl, uint* exposure, uint* gain, uint* mode);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera15SetExposureGainENS_13CameraChannelEjjjj")]
                internal static extern Input.CameraResult SetExposureGain_0(global::System.IntPtr instance, Input.CameraChannel channel, uint exposureControl, uint exposure, uint gain, uint mode);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera15GetWhiteBalanceENS_13CameraChannelEPjS2_S2_S2_")]
                internal static extern Input.CameraResult GetWhiteBalance_0(global::System.IntPtr instance, Input.CameraChannel channel, uint* whiteBalanceControl, uint* gainRed, uint* gainBlue, uint* gainGreen);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera15SetWhiteBalanceENS_13CameraChannelEjjjj")]
                internal static extern Input.CameraResult SetWhiteBalance_0(global::System.IntPtr instance, Input.CameraChannel channel, uint whiteBalanceControl, uint gainRed, uint gainBlue, uint gainGreen);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera8GetGammaENS_13CameraChannelEPjS2_")]
                internal static extern Input.CameraResult GetGamma_0(global::System.IntPtr instance, Input.CameraChannel channel, uint* gammaControl, uint* value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera8SetGammaENS_13CameraChannelEjj")]
                internal static extern Input.CameraResult SetGamma_0(global::System.IntPtr instance, Input.CameraChannel channel, uint gammaControl, uint value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera13GetSaturationENS_13CameraChannelEPj")]
                internal static extern Input.CameraResult GetSaturation_0(global::System.IntPtr instance, Input.CameraChannel channel, uint* saturation);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera13SetSaturationENS_13CameraChannelEj")]
                internal static extern Input.CameraResult SetSaturation_0(global::System.IntPtr instance, Input.CameraChannel channel, uint saturation);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera11GetContrastENS_13CameraChannelEPj")]
                internal static extern Input.CameraResult GetContrast_0(global::System.IntPtr instance, Input.CameraChannel channel, uint* contrast);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera11SetContrastENS_13CameraChannelEj")]
                internal static extern Input.CameraResult SetContrast_0(global::System.IntPtr instance, Input.CameraChannel channel, uint contrast);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera12GetSharpnessENS_13CameraChannelEPj")]
                internal static extern Input.CameraResult GetSharpness_0(global::System.IntPtr instance, Input.CameraChannel channel, uint* sharpness);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera12SetSharpnessENS_13CameraChannelEj")]
                internal static extern Input.CameraResult SetSharpness_0(global::System.IntPtr instance, Input.CameraChannel channel, uint sharpness);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera6GetHueENS_13CameraChannelEPi")]
                internal static extern Input.CameraResult GetHue_0(global::System.IntPtr instance, Input.CameraChannel channel, int* hue);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera6SetHueENS_13CameraChannelEi")]
                internal static extern Input.CameraResult SetHue_0(global::System.IntPtr instance, Input.CameraChannel channel, int hue);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera29GetDefectivePixelCancellationENS_13CameraChannelEPj")]
                internal static extern Input.CameraResult GetDefectivePixelCancellation_0(global::System.IntPtr instance, Input.CameraChannel channel, uint* isEnabled);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera29SetDefectivePixelCancellationENS_13CameraChannelEj")]
                internal static extern Input.CameraResult SetDefectivePixelCancellation_0(global::System.IntPtr instance, Input.CameraChannel channel, uint isEnabled);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera17GetLensCorrectionENS_13CameraChannelEPj")]
                internal static extern Input.CameraResult GetLensCorrection_0(global::System.IntPtr instance, Input.CameraChannel channel, uint* isEnabled);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input6Camera17SetLensCorrectionENS_13CameraChannelEj")]
                internal static extern Input.CameraResult SetLensCorrection_0(global::System.IntPtr instance, Input.CameraChannel channel, uint isEnabled);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal Camera(Camera.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal Camera(Camera.Internal native)
                : this(&native)
            {
            }

            public Camera(global::System.IntPtr native, bool isInternalImpl = false)
            {
                __Instance = native;
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Marshal.FreeHGlobal(__Instance);
            }

            public Input.CameraResult Open()
            {
                var __ret = Internal.Open_0(__Instance);
                return __ret;
            }

            public Input.CameraResult Stop()
            {
                var __ret = Internal.Stop_0(__Instance);
                return __ret;
            }

            public Input.CameraResult Close()
            {
                var __ret = Internal.Close_0(__Instance);
                return __ret;
            }

            public Input.CameraResult SetConfigType(Input.CameraConfigType configType)
            {
                var arg0 = configType;
                var __ret = Internal.SetConfigType_0(__Instance, arg0);
                return __ret;
            }

            public Input.CameraResult Start(Input.CameraFrameFormat camera1format, Input.CameraFrameFormat camera2Format)
            {
                var arg0 = camera1format;
                var arg1 = camera2Format;
                var __ret = Internal.Start_0(__Instance, arg0, arg1);
                return __ret;
            }

            public Input.CameraResult GetExposureGain(Input.CameraChannel channel, out uint exposureControl, out uint exposure, out uint gain, out uint mode)
            {
                var arg0 = channel;
                uint _exposureControl;
                var arg1 = &_exposureControl;
                uint _exposure;
                var arg2 = &_exposure;
                uint _gain;
                var arg3 = &_gain;
                uint _mode;
                var arg4 = &_mode;
                var __ret = Internal.GetExposureGain_0(__Instance, arg0, arg1, arg2, arg3, arg4);
                exposureControl = _exposureControl;
                exposure = _exposure;
                gain = _gain;
                mode = _mode;
                return __ret;
            }

            public Input.CameraResult SetExposureGain(Input.CameraChannel channel, uint exposureControl, uint exposure, uint gain, uint mode)
            {
                var arg0 = channel;
                var arg1 = exposureControl;
                var arg2 = exposure;
                var arg3 = gain;
                var arg4 = mode;
                var __ret = Internal.SetExposureGain_0(__Instance, arg0, arg1, arg2, arg3, arg4);
                return __ret;
            }

            public Input.CameraResult GetWhiteBalance(Input.CameraChannel channel, out uint whiteBalanceControl, out uint gainRed, out uint gainBlue, out uint gainGreen)
            {
                var arg0 = channel;
                uint _whiteBalanceControl;
                var arg1 = &_whiteBalanceControl;
                uint _gainRed;
                var arg2 = &_gainRed;
                uint _gainBlue;
                var arg3 = &_gainBlue;
                uint _gainGreen;
                var arg4 = &_gainGreen;
                var __ret = Internal.GetWhiteBalance_0(__Instance, arg0, arg1, arg2, arg3, arg4);
                whiteBalanceControl = _whiteBalanceControl;
                gainRed = _gainRed;
                gainBlue = _gainBlue;
                gainGreen = _gainGreen;
                return __ret;
            }

            public Input.CameraResult SetWhiteBalance(Input.CameraChannel channel, uint whiteBalanceControl, uint gainRed, uint gainBlue, uint gainGreen)
            {
                var arg0 = channel;
                var arg1 = whiteBalanceControl;
                var arg2 = gainRed;
                var arg3 = gainBlue;
                var arg4 = gainGreen;
                var __ret = Internal.SetWhiteBalance_0(__Instance, arg0, arg1, arg2, arg3, arg4);
                return __ret;
            }

            public Input.CameraResult GetGamma(Input.CameraChannel channel, out uint gammaControl, out uint value)
            {
                var arg0 = channel;
                uint _gammaControl;
                var arg1 = &_gammaControl;
                uint _value;
                var arg2 = &_value;
                var __ret = Internal.GetGamma_0(__Instance, arg0, arg1, arg2);
                gammaControl = _gammaControl;
                value = _value;
                return __ret;
            }

            public Input.CameraResult SetGamma(Input.CameraChannel channel, uint gammaControl, uint value)
            {
                var arg0 = channel;
                var arg1 = gammaControl;
                var arg2 = value;
                var __ret = Internal.SetGamma_0(__Instance, arg0, arg1, arg2);
                return __ret;
            }

            public Input.CameraResult GetSaturation(Input.CameraChannel channel, out uint saturation)
            {
                var arg0 = channel;
                uint _saturation;
                var arg1 = &_saturation;
                var __ret = Internal.GetSaturation_0(__Instance, arg0, arg1);
                saturation = _saturation;
                return __ret;
            }

            public Input.CameraResult SetSaturation(Input.CameraChannel channel, uint saturation)
            {
                var arg0 = channel;
                var arg1 = saturation;
                var __ret = Internal.SetSaturation_0(__Instance, arg0, arg1);
                return __ret;
            }

            public Input.CameraResult GetContrast(Input.CameraChannel channel, out uint contrast)
            {
                var arg0 = channel;
                uint _contrast;
                var arg1 = &_contrast;
                var __ret = Internal.GetContrast_0(__Instance, arg0, arg1);
                contrast = _contrast;
                return __ret;
            }

            public Input.CameraResult SetContrast(Input.CameraChannel channel, uint contrast)
            {
                var arg0 = channel;
                var arg1 = contrast;
                var __ret = Internal.SetContrast_0(__Instance, arg0, arg1);
                return __ret;
            }

            public Input.CameraResult GetSharpness(Input.CameraChannel channel, out uint sharpness)
            {
                var arg0 = channel;
                uint _sharpness;
                var arg1 = &_sharpness;
                var __ret = Internal.GetSharpness_0(__Instance, arg0, arg1);
                sharpness = _sharpness;
                return __ret;
            }

            public Input.CameraResult SetSharpness(Input.CameraChannel channel, uint sharpness)
            {
                var arg0 = channel;
                var arg1 = sharpness;
                var __ret = Internal.SetSharpness_0(__Instance, arg0, arg1);
                return __ret;
            }

            public Input.CameraResult GetHue(Input.CameraChannel channel, out int hue)
            {
                var arg0 = channel;
                int _hue;
                var arg1 = &_hue;
                var __ret = Internal.GetHue_0(__Instance, arg0, arg1);
                hue = _hue;
                return __ret;
            }

            public Input.CameraResult SetHue(Input.CameraChannel channel, int hue)
            {
                var arg0 = channel;
                var arg1 = hue;
                var __ret = Internal.SetHue_0(__Instance, arg0, arg1);
                return __ret;
            }

            public Input.CameraResult GetDefectivePixelCancellation(Input.CameraChannel channel, out uint isEnabled)
            {
                var arg0 = channel;
                uint _isEnabled;
                var arg1 = &_isEnabled;
                var __ret = Internal.GetDefectivePixelCancellation_0(__Instance, arg0, arg1);
                isEnabled = _isEnabled;
                return __ret;
            }

            public Input.CameraResult SetDefectivePixelCancellation(Input.CameraChannel channel, uint isEnabled)
            {
                var arg0 = channel;
                var arg1 = isEnabled;
                var __ret = Internal.SetDefectivePixelCancellation_0(__Instance, arg0, arg1);
                return __ret;
            }

            public Input.CameraResult GetLensCorrection(Input.CameraChannel channel, out uint isEnabled)
            {
                var arg0 = channel;
                uint _isEnabled;
                var arg1 = &_isEnabled;
                var __ret = Internal.GetLensCorrection_0(__Instance, arg0, arg1);
                isEnabled = _isEnabled;
                return __ret;
            }

            public Input.CameraResult SetLensCorrection(Input.CameraChannel channel, uint isEnabled)
            {
                var arg0 = channel;
                var arg1 = isEnabled;
                var __ret = Internal.SetLensCorrection_0(__Instance, arg0, arg1);
                return __ret;
            }

            public static bool IsAttached()
            {
                var __ret = Internal.IsAttached_0();
                return __ret;
            }
        }
    }
}
