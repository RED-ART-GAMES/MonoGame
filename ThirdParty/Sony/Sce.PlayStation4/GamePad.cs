//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Input
    {
        public unsafe static partial class GamePad
        {
            [StructLayout(LayoutKind.Explicit, Size = 1)]
            public partial struct Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input7GamePad8GetStateEiPv")]
                internal static extern void GetState_0(int playerIndex, void* state);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input7GamePad11IsConnectedEi")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool IsConnected_0(int playerIndex);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input7GamePad12SetVibrationEiff")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool SetVibration_0(int playerIndex, float smallMotor, float largeMotor);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input7GamePad11SetLightBarEihhh")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool SetLightBar_0(int playerIndex, byte r, byte g, byte b);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input7GamePad13ResetLightBarEi")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool ResetLightBar_0(int playerIndex);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input7GamePad16SetMotionEnabledEib")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool SetMotionEnabled_0(int playerIndex, bool value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input7GamePad26SetVelocityDeadbandEnabledEib")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool SetVelocityDeadbandEnabled_0(int playerIndex, bool value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input7GamePad24SetTiltCorrectionEnabledEib")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool SetTiltCorrectionEnabled_0(int playerIndex, bool value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Input7GamePad16ResetOrientationEi")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool ResetOrientation_0(int playerIndex);
            }

            internal static void GetState(int playerIndex, void* state)
            {
                var arg1 = state;
                Internal.GetState_0(playerIndex, arg1);
            }

            public static bool IsConnected(int playerIndex)
            {
                var __ret = Internal.IsConnected_0(playerIndex);
                return __ret;
            }

            public static bool SetVibration(int playerIndex, float smallMotor, float largeMotor)
            {
                var __ret = Internal.SetVibration_0(playerIndex, smallMotor, largeMotor);
                return __ret;
            }

            public static bool SetLightBar(int playerIndex, byte r, byte g, byte b)
            {
                var arg1 = r;
                var arg2 = g;
                var arg3 = b;
                var __ret = Internal.SetLightBar_0(playerIndex, arg1, arg2, arg3);
                return __ret;
            }

            public static bool ResetLightBar(int playerIndex)
            {
                var __ret = Internal.ResetLightBar_0(playerIndex);
                return __ret;
            }

            public static bool SetMotionEnabled(int playerIndex, bool value)
            {
                var __ret = Internal.SetMotionEnabled_0(playerIndex, value);
                return __ret;
            }

            public static bool SetVelocityDeadbandEnabled(int playerIndex, bool value)
            {
                var __ret = Internal.SetVelocityDeadbandEnabled_0(playerIndex, value);
                return __ret;
            }

            public static bool SetTiltCorrectionEnabled(int playerIndex, bool value)
            {
                var __ret = Internal.SetTiltCorrectionEnabled_0(playerIndex, value);
                return __ret;
            }

            public static bool ResetOrientation(int playerIndex)
            {
                var __ret = Internal.ResetOrientation_0(playerIndex);
                return __ret;
            }
        }
    }
}
