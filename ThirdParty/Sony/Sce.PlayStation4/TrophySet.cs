//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Network
    {
        public enum TrophyResult
        {
            Ok = 0,
            ErrorUnknown = -2141907456,
            ErrorNotInitialized = -2141907455,
            ErrorAlreadyInitialized = -2141907454,
            ErrorOutOfMemory = -2141907453,
            ErrorInvalidArgument = -2141907452,
            ErrorInsufficientBuffer = -2141907451,
            ErrorExceedsMax = -2141907450,
            ErrorAbort = -2141907449,
            ErrorInvalidHandle = -2141907448,
            ErrorInvalidContext = -2141907447,
            ErrorInvalidTrophyId = -2141907446,
            ErrorInvalidGroupId = -2141907445,
            ErrorTrophyAlreadyUnlocked = -2141907444,
            ErrorPlatinumCannotUnlock = -2141907443,
            ErrorAccountIdNotMatch = -2141907442,
            ErrorNotRegistered = -2141907441,
            ErrorAlreadyRegistered = -2141907440,
            ErrorBrokenData = -2141907439,
            ErrorInsufficientSpace = -2141907438,
            ErrorContextAlreadyExists = -2141907437,
            ErrorIconFileNotFound = -2141907436,
            ErrorInvalidTrpFileFormat = -2141907434,
            ErrorUnsupportedTrpFile = -2141907433,
            ErrorInvalidTrophyConfFormat = -2141907432,
            ErrorUnsupportedTrophyConf = -2141907431,
            ErrorTrophyNotUnlocked = -2141907430,
            ErrorUserNotFound = -2141907428,
            ErrorUserNotLoggedIn = -2141907427,
            ErrorContextUserLogout = -2141907426,
            ErrorUseTrpForDevelopment = -2141907425,
            ErrorInvalidNpTitleId = -2141907424,
            ErrorInvalidNpServiceLabel = -2141907423,
            ErrorNotSupported = -2141907422,
            ErrorContextExceedsMax = -2141907421,
            ErrorHandleExceedsMax = -2141907420,
            ErrorInvalidUserId = -2141907419,
            ErrorTitleConfNotInstalled = -2141907418,
            ErrorBrokenTitleCOnf = -2141907417,
            ErrorInconsistentTitleConf = -2141907416
        }

        public unsafe partial class TrophySet : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 4)]
            public partial struct Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network9TrophySetC2ERKS0_")]
                internal static extern void cctor_0(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network9TrophySetC2Ev")]
                internal static extern void ctor_1(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network9TrophySetD2Ev")]
                internal static extern void dtor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network9TrophySet13CreateContextEij")]
                internal static extern Network.TrophyResult CreateContext_0(global::System.IntPtr instance, int userId, uint serviceLabel);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network9TrophySet10IsUnlockedEiPb")]
                internal static extern Network.TrophyResult IsUnlocked_0(global::System.IntPtr instance, int trophyId, bool* isUnlocked);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network9TrophySet6UnlockEiPb")]
                internal static extern Network.TrophyResult Unlock_0(global::System.IntPtr instance, int trophyId, bool* platinumReceived);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal TrophySet(TrophySet.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal TrophySet(TrophySet.Internal native)
                : this(&native)
            {
            }

            public TrophySet(global::System.IntPtr native, bool isInternalImpl = false)
            {
                __Instance = native;
            }

            protected TrophySet()
            {
                __Instance = Marshal.AllocHGlobal(4);
                Internal.ctor_1(__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Internal.dtor_0(__Instance);
                Marshal.FreeHGlobal(__Instance);
            }

            protected Network.TrophyResult CreateContext(int userId, uint serviceLabel)
            {
                var arg0 = userId;
                var arg1 = serviceLabel;
                var __ret = Internal.CreateContext_0(__Instance, arg0, arg1);
                return __ret;
            }

            public Network.TrophyResult IsUnlocked(int trophyId, out bool isUnlocked)
            {
                var arg0 = trophyId;
                bool _isUnlocked;
                var arg1 = &_isUnlocked;
                var __ret = Internal.IsUnlocked_0(__Instance, arg0, arg1);
                isUnlocked = _isUnlocked;
                return __ret;
            }

            public Network.TrophyResult Unlock(int trophyId, out bool platinumReceived)
            {
                var arg0 = trophyId;
                bool _platinumReceived;
                var arg1 = &_platinumReceived;
                var __ret = Internal.Unlock_0(__Instance, arg0, arg1);
                platinumReceived = _platinumReceived;
                return __ret;
            }
        }
    }
}
