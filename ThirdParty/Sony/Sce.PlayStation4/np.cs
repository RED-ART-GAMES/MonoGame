//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Network
    {
        public enum NpResult
        {
            Ok = 0,
            ErrorInvalidArgument = -2141913085,
            ErrorUnknownPlatformType = -2141913084,
            ErrorOutOfMemory = -2141913083,
            ErrorSignedOut = -2141913082,
            ErrorUserNotFound = -2141913081,
            ErrorCallbackAlreadyRegistered = -2141913080,
            ErrorCallbackNotRegistered = -2141913079,
            ErrorNotSignedUp = -2141913078,
            ErrorAgeRestriction = -2141913077,
            ErrorLogout = -2141913076,
            ErrorLatestSystemSoftwareExist = -2141913075,
            ErrorLatestSystemSoftwareExistForTitle = -2141913074,
            ErrorLatestPatchPkgExist = -2141913073,
            ErrorLatestPatchPkgDownloaded = -2141913072,
            ErrorInvalidSize = -2141913071,
            ErrorAborted = -2141913070,
            RequestMax = -2141913069,
            RequestNotFound = -2141913068,
            InvalidId = -2141913067,
            UtilErrorInvalidNpId = -2141911547,
            UtilErrorNotMatch = -2141911543
        }

        [Flags]
        public enum NpPlusFeature : ulong
        {
            RealtimeMultiplay = 1
        }

        public unsafe static partial class Np
        {
            [StructLayout(LayoutKind.Explicit, Size = 1)]
            public partial struct Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network2Np13_SetNpTitleIdEPKcPKh")]
                internal static extern Network.NpResult _SetNpTitleId_0(global::System.IntPtr titleId, byte* titleSecret);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network2Np18_NotifyPlusFeatureEiNS_13NpPlusFeatureE")]
                internal static extern Network.NpResult _NotifyPlusFeature_0(int userId, Network.NpPlusFeature features);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network2Np10_CheckPlusEiNS_13NpPlusFeatureEPb")]
                internal static extern Network.NpResult _CheckPlus_0(int userId, Network.NpPlusFeature features, bool* authorised);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network2Np22_SetContentRestrictionEi")]
                internal static extern Network.NpResult _SetContentRestriction_0(int defaultAgeRestriction);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network2Np13_GetAccountIdEi")]
                internal static extern ulong _GetAccountId_0(int userId);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network2Np20_CheckNpAvailabilityEi")]
                internal static extern Network.NpResult _CheckNpAvailability_0(int userId);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network2Np23_GetParentalControlInfoEiPiPbS2_")]
                internal static extern Network.NpResult _GetParentalControlInfo_0(int userId, int* age, bool* chatRestriction, bool* ugcRestriction);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN7Network2Np9_GetStateEiPi")]
                internal static extern Network.NpResult _GetState_0(int userId, int* state);
            }

            public static Network.NpResult _SetNpTitleId(string titleId, byte* titleSecret)
            {
                var arg0 = Marshal.StringToHGlobalAnsi(titleId);
                var arg1 = titleSecret;
                var __ret = Internal._SetNpTitleId_0(arg0, arg1);
                Marshal.FreeHGlobal(arg0);
                return __ret;
            }

            public static Network.NpResult _NotifyPlusFeature(int userId, Network.NpPlusFeature features)
            {
                var arg0 = userId;
                var arg1 = features;
                var __ret = Internal._NotifyPlusFeature_0(arg0, arg1);
                return __ret;
            }

            public static Network.NpResult _CheckPlus(int userId, Network.NpPlusFeature features, bool* authorised)
            {
                var arg0 = userId;
                var arg1 = features;
                var arg2 = authorised;
                var __ret = Internal._CheckPlus_0(arg0, arg1, arg2);
                return __ret;
            }

            public static Network.NpResult _SetContentRestriction(int defaultAgeRestriction)
            {
                var __ret = Internal._SetContentRestriction_0(defaultAgeRestriction);
                return __ret;
            }

            public static ulong _GetAccountId(int userId)
            {
                var arg0 = userId;
                var __ret = Internal._GetAccountId_0(arg0);
                return __ret;
            }

            public static Network.NpResult _CheckNpAvailability(int userId)
            {
                var arg0 = userId;
                var __ret = Internal._CheckNpAvailability_0(arg0);
                return __ret;
            }

            public static Network.NpResult _GetParentalControlInfo(int userId, int* age, bool* chatRestriction, bool* ugcRestriction)
            {
                var arg0 = userId;
                var arg1 = age;
                var arg2 = chatRestriction;
                var arg3 = ugcRestriction;
                var __ret = Internal._GetParentalControlInfo_0(arg0, arg1, arg2, arg3);
                return __ret;
            }

            public static Network.NpResult _GetState(int userId, int* state)
            {
                var arg0 = userId;
                var arg1 = state;
                var __ret = Internal._GetState_0(arg0, arg1);
                return __ret;
            }
        }
    }
}
