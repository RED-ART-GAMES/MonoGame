//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace System
    {
        public enum PlayGoResult
        {
            Ok = 0,
            ErrorUnknown = -2135818239,
            ErrorFatal = -2135818238,
            ErrorNoMemory = -2135818237,
            ErrorInvalidArgument = -2135818236,
            ErrorNotInitialized = -2135818235,
            ErrorAlreadyInitialized = -2135818234,
            ErrorAlreadyStarted = -2135818233,
            ErrorNotStarted = -2135818232,
            ErrorBadHandle = -2135818231,
            ErrorBadPointer = -2135818230,
            ErrorBadSize = -2135818229,
            ErrorBadChunkId = -2135818228,
            ErrorBadSpeed = -2135818227,
            ErrorNotSupportPlaygo = -2135818226,
            ErrorEPerm = -2135818225,
            ErrorBadLocus = -2135818224
        }

        public enum PlayGoInstallSpeed
        {
            Suspended = 0,
            Trickle = 1,
            Full = 2
        }

        public enum PlayGoLocus : sbyte
        {
            NotDownloaded = 0,
            LocalSlow = 2,
            Fast = 3
        }

        public unsafe partial class ChunkList : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 204)]
            public partial struct Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System9ChunkListC2ERKS0_")]
                internal static extern void cctor_0(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System9ChunkListC2Ev")]
                internal static extern void ctor_1(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System9ChunkList6TryAddEt")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool TryAdd_0(global::System.IntPtr instance, ushort value);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal ChunkList(ChunkList.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal ChunkList(ChunkList.Internal native)
                : this(&native)
            {
            }

            public ChunkList(global::System.IntPtr native, bool isInternalImpl = false)
            {
                __Instance = native;
            }

            public ChunkList()
            {
                __Instance = Marshal.AllocHGlobal(204);
                Internal.ctor_1(__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Marshal.FreeHGlobal(__Instance);
            }

            protected bool TryAdd(ushort value)
            {
                var arg0 = value;
                var __ret = Internal.TryAdd_0(__Instance, arg0);
                return __ret;
            }

            public static int MaxItems
            {
                get
                {
                    var __ptr = (int*)CppSharp.SymbolResolver.ResolveSymbol("scePlayStation4.prx", "_ZN6System9ChunkList8MaxItemsE");
                    return *__ptr;
                }
            }
        }

        public unsafe partial class LociResult : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 108)]
            public partial struct Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System10LociResultC2ERKS0_")]
                internal static extern void cctor_0(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System10LociResultC2Ev")]
                internal static extern void ctor_1(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System10LociResult6TryGetEiPa")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool TryGet_0(global::System.IntPtr instance, int index, sbyte* outLocus);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZNK6System10LociResult8GetCountEv")]
                internal static extern uint GetCount_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZNK6System10LociResult9GetResultEv")]
                internal static extern int GetResult_0(global::System.IntPtr instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal LociResult(LociResult.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal LociResult(LociResult.Internal native)
                : this(&native)
            {
            }

            public LociResult(global::System.IntPtr native, bool isInternalImpl = false)
            {
                __Instance = native;
            }

            public LociResult()
            {
                __Instance = Marshal.AllocHGlobal(108);
                Internal.ctor_1(__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Marshal.FreeHGlobal(__Instance);
            }

            protected bool TryGet(int index, out sbyte outLocus)
            {
                sbyte _outLocus;
                var arg1 = &_outLocus;
                var __ret = Internal.TryGet_0(__Instance, index, arg1);
                outLocus = _outLocus;
                return __ret;
            }

            public static int MaxItems
            {
                get
                {
                    var __ptr = (int*)CppSharp.SymbolResolver.ResolveSymbol("scePlayStation4.prx", "_ZN6System10LociResult8MaxItemsE");
                    return *__ptr;
                }
            }

            public uint Count
            {
                get
                {
                    var __ret = Internal.GetCount_0(__Instance);
                    return __ret;
                }
            }

            public int Result
            {
                get
                {
                    var __ret = Internal.GetResult_0(__Instance);
                    return __ret;
                }
            }
        }

        public unsafe partial class ToDoList : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 404)]
            public partial struct Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System8ToDoListC2ERKS0_")]
                internal static extern void cctor_0(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System8ToDoListC2Ev")]
                internal static extern void ctor_1(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System8ToDoList6TryAddEta")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool TryAdd_0(global::System.IntPtr instance, ushort chunkId, sbyte locus);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System8ToDoList6TryGetEiPtPa")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool TryGet_0(global::System.IntPtr instance, int index, ushort* chunkId, sbyte* outLocus);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZNK6System8ToDoList8GetCountEv")]
                internal static extern uint GetCount_0(global::System.IntPtr instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal ToDoList(ToDoList.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal ToDoList(ToDoList.Internal native)
                : this(&native)
            {
            }

            public ToDoList(global::System.IntPtr native, bool isInternalImpl = false)
            {
                __Instance = native;
            }

            public ToDoList()
            {
                __Instance = Marshal.AllocHGlobal(404);
                Internal.ctor_1(__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Marshal.FreeHGlobal(__Instance);
            }

            protected bool TryAdd(ushort chunkId, sbyte locus)
            {
                var arg0 = chunkId;
                var arg1 = locus;
                var __ret = Internal.TryAdd_0(__Instance, arg0, arg1);
                return __ret;
            }

            protected bool TryGet(int index, out ushort chunkId, out sbyte outLocus)
            {
                ushort _chunkId;
                var arg1 = &_chunkId;
                sbyte _outLocus;
                var arg2 = &_outLocus;
                var __ret = Internal.TryGet_0(__Instance, index, arg1, arg2);
                chunkId = _chunkId;
                outLocus = _outLocus;
                return __ret;
            }

            public static int MaxItems
            {
                get
                {
                    var __ptr = (int*)CppSharp.SymbolResolver.ResolveSymbol("scePlayStation4.prx", "_ZN6System8ToDoList8MaxItemsE");
                    return *__ptr;
                }
            }

            public uint Count
            {
                get
                {
                    var __ret = Internal.GetCount_0(__Instance);
                    return __ret;
                }
            }
        }

        public unsafe partial class ProgressResult : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 1608)]
            public partial struct Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System14ProgressResultC2ERKS0_")]
                internal static extern void cctor_0(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System14ProgressResultC2Ev")]
                internal static extern void ctor_1(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System14ProgressResult6TryGetEiPmS1_")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool TryGet_0(global::System.IntPtr instance, int index, ulong* progressSize, ulong* totalSize);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZNK6System14ProgressResult8GetCountEv")]
                internal static extern uint GetCount_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZNK6System14ProgressResult8GetErrorEv")]
                internal static extern int GetError_0(global::System.IntPtr instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal ProgressResult(ProgressResult.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal ProgressResult(ProgressResult.Internal native)
                : this(&native)
            {
            }

            public ProgressResult(global::System.IntPtr native, bool isInternalImpl = false)
            {
                __Instance = native;
            }

            public ProgressResult()
            {
                __Instance = Marshal.AllocHGlobal(1608);
                Internal.ctor_1(__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Marshal.FreeHGlobal(__Instance);
            }

            protected bool TryGet(int index, out ulong progressSize, out ulong totalSize)
            {
                ulong _progressSize;
                var arg1 = &_progressSize;
                ulong _totalSize;
                var arg2 = &_totalSize;
                var __ret = Internal.TryGet_0(__Instance, index, arg1, arg2);
                progressSize = _progressSize;
                totalSize = _totalSize;
                return __ret;
            }

            public static int MaxItems
            {
                get
                {
                    var __ptr = (int*)CppSharp.SymbolResolver.ResolveSymbol("scePlayStation4.prx", "_ZN6System14ProgressResult8MaxItemsE");
                    return *__ptr;
                }
            }

            public uint Count
            {
                get
                {
                    var __ret = Internal.GetCount_0(__Instance);
                    return __ret;
                }
            }

            public int Error
            {
                get
                {
                    var __ret = Internal.GetError_0(__Instance);
                    return __ret;
                }
            }
        }

        public unsafe partial class PlayGo : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 16)]
            public partial struct Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGoC2ERKS0_")]
                internal static extern void cctor_0(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGoC2Ej")]
                internal static extern void ctor_1(global::System.IntPtr instance, uint heapSize);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGoD2Ev")]
                internal static extern void dtor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo15ConvertLanguageEi")]
                internal static extern ulong ConvertLanguage_0(int systemLang);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo6GetEtaEPKNS_9ChunkListE")]
                internal static extern long GetEta_0(global::System.IntPtr instance, global::System.IntPtr chunks);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo8GetLocusEPKNS_9ChunkListE")]
                internal static extern global::System.IntPtr GetLocus_0(global::System.IntPtr instance, global::System.IntPtr chunks);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo11GetProgressEPKNS_9ChunkListE")]
                internal static extern global::System.IntPtr GetProgress_0(global::System.IntPtr instance, global::System.IntPtr chunks);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo8PrefetchEPKNS_9ChunkListEa")]
                internal static extern System.PlayGoResult Prefetch_0(global::System.IntPtr instance, global::System.IntPtr chunks, sbyte minimumLocus);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo20GetDefaultBufferSizeEv")]
                internal static extern uint GetDefaultBufferSize_0();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo15GetInstallSpeedEv")]
                internal static extern System.PlayGoInstallSpeed GetInstallSpeed_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo15SetInstallSpeedENS_18PlayGoInstallSpeedE")]
                internal static extern void SetInstallSpeed_0(global::System.IntPtr instance, System.PlayGoInstallSpeed speed);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo15GetLanguageMaskEv")]
                internal static extern ulong GetLanguageMask_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo15SetLanguageMaskEm")]
                internal static extern void SetLanguageMask_0(global::System.IntPtr instance, ulong languageMask);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo11GetToDoListEv")]
                internal static extern global::System.IntPtr GetToDoList_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN6System6PlayGo11SetToDoListEPNS_8ToDoListE")]
                internal static extern void SetToDoList_0(global::System.IntPtr instance, global::System.IntPtr toDoList);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal PlayGo(PlayGo.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal PlayGo(PlayGo.Internal native)
                : this(&native)
            {
            }

            public PlayGo(global::System.IntPtr native, bool isInternalImpl = false)
            {
                __Instance = native;
            }

            public PlayGo(uint heapSize)
            {
                __Instance = Marshal.AllocHGlobal(16);
                var arg0 = heapSize;
                Internal.ctor_1(__Instance, arg0);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Internal.dtor_0(__Instance);
                Marshal.FreeHGlobal(__Instance);
            }

            public long GetEta(System.ChunkList chunks)
            {
                var arg0 = chunks == (System.ChunkList) null ? global::System.IntPtr.Zero : chunks.__Instance;
                var __ret = Internal.GetEta_0(__Instance, arg0);
                return __ret;
            }

            public System.LociResult GetLocus(System.ChunkList chunks)
            {
                var arg0 = chunks == (System.ChunkList) null ? global::System.IntPtr.Zero : chunks.__Instance;
                var __ret = Internal.GetLocus_0(__Instance, arg0);
                if (__ret == global::System.IntPtr.Zero) return null;
                return (__ret == IntPtr.Zero) ? null : new System.LociResult(__ret);
            }

            public System.ProgressResult GetProgress(System.ChunkList chunks)
            {
                var arg0 = chunks == (System.ChunkList) null ? global::System.IntPtr.Zero : chunks.__Instance;
                var __ret = Internal.GetProgress_0(__Instance, arg0);
                if (__ret == global::System.IntPtr.Zero) return null;
                return (__ret == IntPtr.Zero) ? null : new System.ProgressResult(__ret);
            }

            public System.PlayGoResult Prefetch(System.ChunkList chunks, sbyte minimumLocus)
            {
                var arg0 = chunks == (System.ChunkList) null ? global::System.IntPtr.Zero : chunks.__Instance;
                var arg1 = minimumLocus;
                var __ret = Internal.Prefetch_0(__Instance, arg0, arg1);
                return __ret;
            }

            public static ulong ConvertLanguage(int systemLang)
            {
                var arg0 = systemLang;
                var __ret = Internal.ConvertLanguage_0(arg0);
                return __ret;
            }

            public static uint DefaultBufferSize
            {
                get
                {
                    var __ret = Internal.GetDefaultBufferSize_0();
                    return __ret;
                }
            }

            public System.PlayGoInstallSpeed InstallSpeed
            {
                get
                {
                    var __ret = Internal.GetInstallSpeed_0(__Instance);
                    return __ret;
                }

                set
                {
                    var arg0 = value;
                    Internal.SetInstallSpeed_0(__Instance, arg0);
                }
            }

            public ulong LanguageMask
            {
                get
                {
                    var __ret = Internal.GetLanguageMask_0(__Instance);
                    return __ret;
                }

                set
                {
                    var arg0 = value;
                    Internal.SetLanguageMask_0(__Instance, arg0);
                }
            }

            public System.ToDoList ToDoList
            {
                get
                {
                    var __ret = Internal.GetToDoList_0(__Instance);
                    if (__ret == global::System.IntPtr.Zero) return null;
                    return (__ret == IntPtr.Zero) ? null : new System.ToDoList(__ret);
                }

                set
                {
                    var arg0 = value == (System.ToDoList) null ? global::System.IntPtr.Zero : value.__Instance;
                    Internal.SetToDoList_0(__Instance, arg0);
                }
            }
        }
    }
}
