//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Graphics
    {
        public unsafe partial class RenderTarget : Sce.PlayStation4.Graphics.Texture, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 64)]
            public new partial struct Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics12RenderTargetC2Ev")]
                internal static extern void ctor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics12RenderTargetC2ERKS0_")]
                internal static extern void cctor_1(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics12RenderTargetC2EPNS_14GraphicsSystemE")]
                internal static extern void ctor_2(global::System.IntPtr instance, global::System.IntPtr system);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics12RenderTargetD2Ev")]
                internal static extern void dtor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics12RenderTarget6Init2DENS_13TextureFormatEiiNS_11DepthFormatE")]
                internal static extern void Init2D_0(global::System.IntPtr instance, Graphics.TextureFormat format, int width, int height, Graphics.DepthFormat depthFormat);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics12RenderTarget6Init3DENS_13TextureFormatEiiiNS_11DepthFormatE")]
                internal static extern void Init3D_0(global::System.IntPtr instance, Graphics.TextureFormat format, int width, int height, int slices, Graphics.DepthFormat depthFormat);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics12RenderTarget8InitCubeENS_13TextureFormatEiiNS_11DepthFormatE")]
                internal static extern void InitCube_0(global::System.IntPtr instance, Graphics.TextureFormat format, int width, int height, Graphics.DepthFormat depthFormat);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8Graphics12RenderTarget17InitFromTexture2DEPNS_7TextureENS_11DepthFormatE")]
                internal static extern void InitFromTexture2D_0(global::System.IntPtr instance, global::System.IntPtr texture, Graphics.DepthFormat depthFormat);
            }

            internal RenderTarget(RenderTarget.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal RenderTarget(RenderTarget.Internal native)
                : this(&native)
            {
            }

            public RenderTarget(global::System.IntPtr native, bool isInternalImpl = false)
                : base(native)
            {
            }

            public RenderTarget(Graphics.GraphicsSystem system)
                : this(IntPtr.Zero)
            {
                __Instance = Marshal.AllocHGlobal(64);
                var arg0 = system == (Graphics.GraphicsSystem) null ? global::System.IntPtr.Zero : system.__Instance;
                Internal.ctor_2(__Instance, arg0);
            }

            protected override void Dispose(bool disposing)
            {
                Internal.dtor_0(__Instance);
                Marshal.FreeHGlobal(__Instance);
            }

            public void Init2D(Graphics.TextureFormat format, int width, int height, Graphics.DepthFormat depthFormat)
            {
                var arg0 = format;
                var arg1 = width;
                var arg2 = height;
                var arg3 = depthFormat;
                Internal.Init2D_0(__Instance, arg0, arg1, arg2, arg3);
            }

            public void Init3D(Graphics.TextureFormat format, int width, int height, int slices, Graphics.DepthFormat depthFormat)
            {
                var arg0 = format;
                var arg1 = width;
                var arg2 = height;
                var arg3 = slices;
                var arg4 = depthFormat;
                Internal.Init3D_0(__Instance, arg0, arg1, arg2, arg3, arg4);
            }

            public void InitCube(Graphics.TextureFormat format, int width, int height, Graphics.DepthFormat depthFormat)
            {
                var arg0 = format;
                var arg1 = width;
                var arg2 = height;
                var arg3 = depthFormat;
                Internal.InitCube_0(__Instance, arg0, arg1, arg2, arg3);
            }

            public void InitFromTexture2D(Graphics.Texture texture, Graphics.DepthFormat depthFormat)
            {
                var arg0 = texture == (Graphics.Texture) null ? global::System.IntPtr.Zero : texture.__Instance;
                var arg1 = depthFormat;
                Internal.InitFromTexture2D_0(__Instance, arg0, arg1);
            }
        }
    }
}
