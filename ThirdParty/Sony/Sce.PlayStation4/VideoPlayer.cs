//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Sce.PlayStation4
{
    namespace Graphics
    {
    }

    namespace Media
    {
        public enum VideoPlayerResult
        {
            Ok = 0,
            ErrorInvalidParams = -2140536831,
            ErrorOperationFailed = -2140536830,
            ErrorNoMemory = -2140536829,
            ErrorNotSupported = -2140536828
        }

        public enum VideoPlayerState
        {
            Not_Loaded = 0,
            Loaded = 1,
            Stopped = 2,
            Paused = 3,
            Playing = 4
        }

        public unsafe partial class VideoPlayer : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 56)]
            public partial struct Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayerC2ERKS0_")]
                internal static extern void cctor_0(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayerC2EPN8Graphics14GraphicsSystemE")]
                internal static extern void ctor_1(global::System.IntPtr instance, global::System.IntPtr graphics);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayerD2Ev")]
                internal static extern void dtor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayer9GrabFrameEv")]
                [return: MarshalAsAttribute(UnmanagedType.I1)]
                internal static extern bool GrabFrame_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayer5PauseEv")]
                internal static extern void Pause_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayer6ResumeEv")]
                internal static extern void Resume_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayer4PlayEPKc")]
                internal static extern void Play_0(global::System.IntPtr instance, global::System.IntPtr filename);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayer4StopEv")]
                internal static extern void Stop_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayer9SetVolumeEf")]
                internal static extern void SetVolume_0(global::System.IntPtr instance, float volume);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayer15GetPlayPositionEv")]
                internal static extern long GetPlayPosition_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayer11SetIsLoopedEb")]
                internal static extern void SetIsLooped_0(global::System.IntPtr instance, bool value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayer10SetIsMutedEb")]
                internal static extern void SetIsMuted_0(global::System.IntPtr instance, bool value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("scePlayStation4.prx", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN5Media11VideoPlayer8GetStateEv")]
                internal static extern Media.VideoPlayerState GetState_0(global::System.IntPtr instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal VideoPlayer(VideoPlayer.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal VideoPlayer(VideoPlayer.Internal native)
                : this(&native)
            {
            }

            public VideoPlayer(global::System.IntPtr native, bool isInternalImpl = false)
            {
                __Instance = native;
            }

            public VideoPlayer(Graphics.GraphicsSystem graphics)
            {
                __Instance = Marshal.AllocHGlobal(56);
                var arg0 = graphics == (Graphics.GraphicsSystem) null ? global::System.IntPtr.Zero : graphics.__Instance;
                Internal.ctor_1(__Instance, arg0);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Internal.dtor_0(__Instance);
                Marshal.FreeHGlobal(__Instance);
            }

            public bool GrabFrame()
            {
                var __ret = Internal.GrabFrame_0(__Instance);
                return __ret;
            }

            public void Pause()
            {
                Internal.Pause_0(__Instance);
            }

            public void Resume()
            {
                Internal.Resume_0(__Instance);
            }

            public void Play(string filename)
            {
                var arg0 = Marshal.StringToHGlobalAnsi(filename);
                Internal.Play_0(__Instance, arg0);
                Marshal.FreeHGlobal(arg0);
            }

            public void Stop()
            {
                Internal.Stop_0(__Instance);
            }

            public float Volume
            {
                set
                {
                    Internal.SetVolume_0(__Instance, value);
                }
            }

            public long PlayPosition
            {
                get
                {
                    var __ret = Internal.GetPlayPosition_0(__Instance);
                    return __ret;
                }
            }

            public bool IsLooped
            {
                set
                {
                    Internal.SetIsLooped_0(__Instance, value);
                }
            }

            public bool IsMuted
            {
                set
                {
                    Internal.SetIsMuted_0(__Instance, value);
                }
            }

            public Media.VideoPlayerState State
            {
                get
                {
                    var __ret = Internal.GetState_0(__Instance);
                    return __ret;
                }
            }
        }
    }
}
